plugins {
    id 'java'
    id 'idea'
    id 'com.github.ben-manes.versions' version '0.28.0'
    id "io.freefair.lombok" version "5.0.0"
}

group 'uk.dioxic'
version '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    log4jVersion = '2.13.2'
    jacksonVersion = '2.11.0'
    picocliVersion = '4.2.0'
    junitVersion = '5.6.2'
    mgenVersion = '0.0.6-SNAPSHOT'
    reactorVersion = '3.3.5.RELEASE'
    mongoVersion = '4.0.2'
}

dependencies {
//    annotationProcessor "org.projectlombok:lombok:1.18.12"
//    compileOnly "org.projectlombok:lombok:1.18.12"
    implementation "org.mongodb:mongodb-driver-reactivestreams:$mongoVersion"
    implementation "org.mongodb:mongodb-driver-sync:$mongoVersion"
    //implementation "org.mongodb:mongodb-driver-async:$mongoVersion"
    implementation "org.apache.logging.log4j:log4j-api:$log4jVersion"
    implementation "org.apache.logging.log4j:log4j-core:$log4jVersion"
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:$log4jVersion"
    implementation "org.apache.commons:commons-lang3:3.10"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jacksonVersion"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    implementation "io.projectreactor:reactor-core:$reactorVersion"
    implementation "uk.dioxic.mgenerate:mgenerate-core:$mgenVersion"
    implementation "info.picocli:picocli:$picocliVersion"
    testImplementation "io.projectreactor:reactor-test:$reactorVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation "org.assertj:assertj-core:3.15.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    annotationProcessor "info.picocli:picocli-codegen:$picocliVersion"
    annotationProcessor "uk.dioxic.mgenerate:mgenerate-apt:$mgenVersion"
}

compileJava {
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}

test {
    useJUnitPlatform()
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
        showStandardStreams = true
    }
}

jar {
    //archiveClassifier = 'uber'
    archiveName 'mongo-tdk.jar'

    manifest {
        attributes "Main-Class": "uk.dioxic.mtdk.Main"
    }

    from sourceSets.main.output

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
}
